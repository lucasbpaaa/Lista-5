#Um pouco sobre nó e lista encadeada:

class Node:
    def __init__(self, data):
        self.data = data
        self.next = None
        
class LinkedList:
    def __init__(self, lista = None):
        self.head = None
        self.size = 0
        if lista is not None:
            for element in lista:
                self.append(element)
      
    def append(self, element):
        if self.head:
            pointer = self.head
            while pointer.next:
                pointer = pointer.next
            pointer.next = Node(element)
        else:
            self.head = Node(element)
        self.size += 1
#Até aqui, o código pode retornar a cabeça (1000) usando print(FinalList.head.data) e a quantidade de elementos da lista usando print(FinalList.size).

FinalList = LinkedList([1000, 2, 3, 4])
print(FinalList.size)





def roman_number(number):
  translate_dict = {1: "I", 4: "IV", 5: "V", 9: "IX", 10: "X", 49: "IL", 50: "L", 90: "XC", 100: "C", 400: "CD", 500: "D", 900: "CM", 1000: "M"}
  roman = ""
  while number >= 1:
    if number >= 1000:
        roman += translate_dict[1000]
        number -= 1000
    if 1000 > number >= 900:
            roman += translate_dict[900]
            number -= 900
    if 900 > number >= 500:
            roman += translate_dict[500]
            number -= 500
    if 500 > number >= 400:
            roman += translate_dict[400]
            number -= 400
    if 400 > number >= 100:
            roman += translate_dict[100]
            number -= 100
            
    if 100 > number >= 50:
            roman += translate_dict[50]
            number -= 50
    if number == 49:
            roman += translate_dict[49]
    if 49 > number >= 10:
            roman += translate_dict[10]
            number -= 10
    if number == 9:
            roman += translate_dict[9]
    if 9 > number >= 5:
            roman += translate_dict[5]
            number -= 5
    if number == 4:
            roman += translate_dict[4]   
    if 4 > number >= 1:
            roman += translate_dict[1]
            number -= 1
    
  return roman
         
print(roman_number(17))
